"""这三种数据存储模式的特点"""
#列表
（1）初始化：list = [1,'2',....]
 (2) 特点：有序、可重复、能读写、具有可变性
（3）常用方法：
    append()#添加的在末尾
    list.insert(index,value)#index表示添加的位置，value表示添加的值
    del list[index]#index表示下标，可以删除index位置的元素
    list.remove(value)#删除列表中具体值
    list.pop(index)#删除index位置的元素
    list[index] = value #表示修改index位置的值，新值为value
 (4)遍历
    #遍历值
    for value in list:
      print(value)#只是遍历值
    for index in range(len(list)):
      print(list[index])#通过获取列表的长度从而遍历下标获取值
    for index,value in enumerate(list):
      print(index,value)#获取下标和值
    for index,value in enumerate(list,item):
      print(index,value)#item表示遍历的起始位置，然后从指定位置开始遍历
 #元组tuple
 (1) 初始化：('a',1,3,45,..)
 (2) 特点：有序、可重复、只读、不可变
 (3) 常用方法：
    tuple.index(value)#找出对应值元素的索引
    tuple.count(value)#找出value值出现的个数
    len(tuple)#求元组的长度
    tuple(list or dict)#将列表或字典转换成元组
 (4) 读取元组的数据、值
    tuple[index]#通过索引下标index读取
    tuple[index:item]#通过切片读取
 
 (4)遍历
    #遍历值
    for value in tuple:
        print(value)
#字典
(1)初始化：dict = {key:value,key:value}
(2)特点：无序、可变的数据类型，key值是唯一的
(3)基本操作：
    len(dict)#返回字典中包含项的个数
    dict('key')#返回key键所对应的值
    del('key')#删除指定键的值
    'key' in dict #判断字典中是否包含指定键值项
(4)遍历
    #遍历键和值
    for key,value in dict.items():
        print(key,value)
    for value in dict.values():
        print(value)#遍历值
    for key in dict.keys():#遍历值
        
    
     
 
      
    
    
    
